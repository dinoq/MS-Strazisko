import type { NextPage } from 'next'
import { withIronSession } from 'next-iron-session';
import Head from 'next/head'
import { useState } from 'react';
import styles from './login.module.scss'

const AdminLoginPage: NextPage = (props: any)  => {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");

  const loginFormSubmitted = async (event) => {
    event.preventDefault();
    const body = JSON.stringify({ username, password });
    const result = await fetch("/api/loginAdmin",
    {
      method: "POST",
      mode: "same-origin",
      headers: { "Content-Type": "application/json" },
      body
    })
    
    if(result.status === 200){
      window.location.replace("/admin/login");
    }
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.formWrapper}>
          <div className={styles.title}>Přihlášení do administrace</div>
          <form className={styles.form} onSubmit={loginFormSubmitted}>
            <input type="text" name="username" id="username" value={username} onChange={e => setUsername(e.target.value)} required />
            <input type="password" name="password" id="password" onChange={e => setPassword(e.target.value)} required />
            <input className={"button"} type="submit" value="Přihlásit!" />
          </form>
        </div>
      </main>
    </div>
  )
}

export default AdminLoginPage

export const getServerSideProps = withIronSession(
  async ({ req, res }) => {

    const adminLogged: Array<any> = req.session.get("adminLogged");

    if (!adminLogged
    ) {
      return {
        props: {  },
      };
    } else {
      return {
        redirect: {
          destination: '/admin',
          permanent: false,
        }
      };
    }
  },
  {
    cookieName: "myapp_cookiename",
    cookieOptions: {
      secure: process.env.NODE_ENV === "production" ? true : false,
    },
    password: "P5hBP4iHlvp6obqtWK0mNuMrZow5x6DQV61W3EUG",
  }
);

