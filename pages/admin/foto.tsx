import type { NextPage } from 'next'
import { withIronSession } from 'next-iron-session'
import Head from 'next/head'
import React, { useState } from 'react'
import { useDispatch } from 'react-redux'
import { addItemToBreadcrumb } from '../../components/admin/Breadcrumb/BreadcrumbReducer'
import FormFrameContainer from '../../components/admin/FormFrame/FormFrameContainer'
import { loadDef } from '../../database/definitions/FormDefReducer'
import { DBManager } from '../../src/DBManager'

enum ShownLevel {
    YEARS,
    ALBUMS,
    PHOTOS
}

const AdminPhotosPage: NextPage = (props: any) => {
    const dispatch = useDispatch();

    const DBObjectClass = "albumPasswords";
    dispatch(addItemToBreadcrumb([{ DBObjectClass: DBObjectClass, DBObject: DBManager.getEmptyDBObject(DBObjectClass), text: "" }]))
    dispatch(loadDef(DBObjectClass));
    setTimeout(()=>{dispatch(loadDef("albums"));}, 4000)
    return (
        <div className={""}>
            <Head>
                <title>Str√°nky</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={""}>
                <FormFrameContainer DBObjectClass={DBObjectClass} />
            </main>
        </div>
    )
}

const getYears = () => {
    let years = [];
    let actualYear = new Date().getFullYear();
    for (let i = 0; i < 10; i++) {
        years.push((actualYear - i) + "/" + (actualYear + 1 - i));
    }
    return years;
}

export const getServerSideProps = withIronSession(
    async ({ req, res }) => {
        const adminLogged: Array<any> = req.session.get("adminLogged");

        if (adminLogged
        ) {
            return {
                props: {},
            };
        } else {
            return {
                redirect: {
                    destination: '/admin/login',
                    permanent: false,
                }
            };
        }
    },
    {
        cookieName: "myapp_cookiename",
        cookieOptions: {
            secure: process.env.NODE_ENV === "production" ? true : false,
        },
        password: "P5hBP4iHlvp6obqtWK0mNuMrZow5x6DQV61W3EUG",
    }
);

export default AdminPhotosPage;
